<?xml version="1.0" encoding="UTF-8" standalone="no"?><templates><template autoinsert="true" context="java-statements" deleted="false" description="log value of variable" enabled="true" name="configLogVarValue">LOGGER.config("${var:localVar}" + ${var});
${:importStatic(de.jtem.jrworkspace.logging.LoggingSystem.LOGGER)}</template><template autoinsert="true" context="java-statements" deleted="false" description="log entry" enabled="true" name="entering">LOGGER.entering(${enclosing_type}.class.getName(), "${enclosing_method}");
${:importStatic(de.jtem.jrworkspace.logging.LoggingSystem.LOGGER)}</template><template autoinsert="true" context="java-statements" deleted="false" description="log entry with arguments" enabled="true" name="entering">LOGGER.entering(${enclosing_type}.class.getName(), "${enclosing_method}", new Object[]{${enclosing_method_arguments}});
${:importStatic(de.jtem.jrworkspace.logging.LoggingSystem.LOGGER)}</template><template autoinsert="true" context="java-statements" deleted="false" description="log exit" enabled="true" name="exiting">LOGGER.exiting(${enclosing_type}.class.getName(), "${enclosing_method}", ${returnValue});
${:importStatic(de.jtem.jrworkspace.logging.LoggingSystem.LOGGER)}</template><template autoinsert="true" context="java-statements" deleted="false" description="log value of variable" enabled="true" name="fineLogVarValue">LOGGER.fine("${var:localVar}" + ${var});
${:importStatic(de.jtem.jrworkspace.logging.LoggingSystem.LOGGER)}</template><template autoinsert="true" context="java-statements" deleted="false" description="log value of variable" enabled="true" name="finerLogVarValue">LOGGER.finer("${var:localVar}" + ${var});
${:importStatic(de.jtem.jrworkspace.logging.LoggingSystem.LOGGER)}</template><template autoinsert="true" context="java-statements" deleted="false" description="log value of variable" enabled="true" name="finestLogVarValue">LOGGER.finest("${var:localVar}" + ${var});
${:importStatic(de.jtem.jrworkspace.logging.LoggingSystem.LOGGER)}</template></templates>